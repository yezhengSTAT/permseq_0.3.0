\name{readAllocate}
\alias{readAllocate}
\title{Allocate ChIP-seq reads}
\usage{
readAllocate(object, outfileLoc = "./", outputFormat, outputFilter, chipThres, chipFile,
bowtieDir, bowtieIndex, vBowtie = 2, mBowtie = 99, pBowtie = 8, bwaDir,
bwaIndex, nBWA = 2, oBWA = 1, tBWA = 8, mBWA = 99, csemDir, picardDir, fragL = 200)
}
\arguments{
\item{object}{Default set as NULL. A "Prior" S4 object generated by \code{priorGenerate}. If object=NULL, then extra parameters, which are chipFile, bowtieIndex, 
  bowtieDir, vBowtie, mBowtie, pBowtie (or bwaDir, bwaIndex, nBWA, oBWA,
  tBWA, mBWA), csemDir, fragL, need to be defined and CSEM will allocate-multi reads without using prior information (see details for more information).}

\item{outfileLoc}{Directory to store processed files. Default set as "./".}

\item{outputFormat}{Output Format. Default is NULL and will only return
  results in bam format. Possible values are tagAlign and bed}
\item{outputFilter}{Boolean parameter indicating whether or not the
  aligned BAM file should be filtered by removing duplicates. If
  chipThres parameter is also provided, the aligned BAM file will also
  get rid of low quality scored alignments. Default value is TRUE.}
\item{chipThres}{For thresholding reads. Default value is NULL and it
  will not filter the alignment results if users do not specify the threshold. It will select reads with  scores higher than\cr
  \code{chipThres} (allocation probability*1000). Default set at NULL and will not threshold reads.}

\item{chipFile}{Default set as NULL, only needed when object =
  NULL. ChIP-Seq files, in fastq format or sam format to save time if it is already aligned
  and includes multi-mapping reads. Aligned BAM format is also accepted for
  further filtering or format transformation.}


\item{bowtieDir}{Default set as NULL, only needed when object = NULL. Directory where Bowtie was installed}
\item{bowtieIndex}{Default set as NULL, only needed when
  object=NULL. Bowtie index, used in bowtie aligning. Users can specify
  the aligner, Bowtie or BWA, by specifying the index that will be
  used. }
w
\item{vBowtie}{Default set as 2, only needed when object = NULL. Bowtie parameter. In -v mode, alignments may have
no more than vBowtie mismatches, where \code{v} may be a number from 0
through 3 set using the -v option. Default value is 2.}

\item{mBowtie}{Default set as 99, only needed when object = NULL. Bowtie parameter. -m parameter instructs bowtie to
refrain from reporting any alignments for reads having more than
\code{mBowtie} reportable alignments. Default value is 99 allowing
multi-reads alignment.}

\item{pBowtie}{Default set as 8, only needed when object = NULL. The -p option causes Bowtie to launch a specified
number of parallel search threads. Each thread runs on a different
processor/core and all threads find alignments in parallel. Default value is 8.}

\item{bwaDir}{Default set as NULL, only needed when object =
  NULL. Directory where BWA was installed.}

\item{bwaIndex}{Default set as NULL, only needed when object = NULL. BWA
  index used in BWA alignment. Users can specify the aligner, Bowtie or
  BWA, by specifying the index that will be used. }

\item{nBWA}{Default set as 2, only needed when object = NULL. BWA
  paramter. In "bwa aln -n" mode, if it is an integer, it denotes the
  maximum edit distances including mismatch and gap open. Otherwise, it
  will be the fraction of missing alignments given 2\% uniform base errr rate.}

\item{oBWA}{Default set as 1, only neede when object = Null. BWA
  parameter. In "bwa aln -o" mode, it specifies the maximum number of gap open.}

\item{tBWA}{Default set as 8, only needed when object = NULL. BWA
  parameter. In "bwa aln -t" mode, it is the number of threads in
  multi-threading mode.}

\item{mBWA}{Default set as 99, only needed when object = NULL. BWA
  parameter. In "bwa samse -n", it restricts the maximum number of
  alignments to output for each read. If a read has more hits, the XA
  tag will not be written.}

\item{csemDir}{Default set as NULL, only needed when object = NULL. Directory where CSEM was installed.}
\item{picardDir}{Default set as NULL, the path to the picard jar (jar
  folder name included) is needed when aligned BAM file
  need filtering and users want to use picard to remove the
  duplicates. Otherwise, filtering can be done by samtools if csemDir is
provided. If both csemDir and picardDir are provided, picard will be used.}
\item{fragL}{Default set as 200, only needed when object = NULL. Fragment length.}

}
\value{
An updated "Prior" object is returned together with the aligned ChIP-seq
output files.
\item{chipSAM}{Location of aligned ChIP-seq files in SAM format.}
\item{chipAllocate}{Location of allocated ChIP-seq files in bam format.}
\item{chipFormat}{Location of allocated ChIP-seq files in other format (tagAlign or bed).}
\item{outfileLoc}{Directory where processed files are (given as an argument).}

Or if no prior is built and allocate ChIP-seq by CSEM directly, a new
"Prior" object will be created.
\item{chipName}{Name of ChIP-seq dataset(s).}
\item{chipNum}{Number of ChIP-seq dataset(s).}
\item{chipAlign}{ChIP-seq alignment summary feedback from bowtie.}
\item{chipSAM}{Location of aligned ChIP-seq in SAM format.}
\item{chipAllocate}{Location of the final allocated ChIP-seq output
  by Permseq in BAM format.}
\item{chipAlignFormat}{Location of the final allocated ChIP-seq
  output by Permseq in other selected format (tagAlign or bed).}
\item{chrList}{Chromsome list.}
\item{fragL}{Fragment length.}
\item{bowtieInfo}{List of bowtie information used: bowtieIndex, bowtieDir, vBowtie, mBowtie and pBowtie.}
\item{bwaInfo}{List of BWA realted information: bwaDir, bwaIndex, nBWA,
  oBWA, tBWA, mBWA.}
\item{csemDir}{Directory where CSEM was installed.}
\item{picardDir}{Directory where PICARD jar file is saved. For
  incorporating multi-mapping reads, we do not recommend using picard to
  remove duplicates. You can leave this option empty so that samtools
  will be adopted to remove PCR duplicates. }
\item{outfileLoc}{Directory to store output files.}


}
\description{
Allocate ChIP-Seq multi-reads using prior information.
}
\details{
By default, it will allocate multi-reads using prior information from
the object generated by \cr
\code{priorGenerate}.

If prior information is not available (DNase and/or histone), do not run
\code{priorProcess} and \code{priorGenerate}. Instead,  set
\code{object} as NULL and give the extra parameters: chipFile,
bowtieDir, bowtieIndex, vBowtie, mBowtie, pBowtie, bwaDir, bwaIndex,
nBWA, oBWA, tBWA, mBWA, csemDir, and
fragL. CSEM will allocate the ChIP-seq.

Users can select from Bowtie and BWA to do the alignment by providing
the corresponding index and leaving the other as default value NULL. If
both indices are provided, the package will automatically use Bowtie to do the multi-mapping reads alignment. 

\code{plot()}, \code{summary()}, \code{names()} and \code{print()} methods included. To obtain the alignment information from bowtie use \code{summary()}.
}




\examples{
\dontrun{
readAllocate(object, outfileLoc = "./", outputFormat = "tagAligne")
}
}


\author{
Xin Zeng, M. Constanza Rojo-Alfaro, Ye Zheng.
}

